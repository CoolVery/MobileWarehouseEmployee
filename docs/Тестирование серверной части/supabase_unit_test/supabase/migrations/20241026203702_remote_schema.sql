

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";






COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";






CREATE OR REPLACE FUNCTION "public"."check_worker_on_shift"() RETURNS "trigger"
    LANGUAGE "plpgsql"
    AS $$BEGIN
  IF EXISTS (
    SELECT 1
    FROM workers_work_shifts
    WHERE id_work_shift = NEW.id_work_shift AND id_worker = NEW.id_worker
  ) THEN
    RAISE EXCEPTION 'Работник уже записан на эту смену';
  END IF;
  RETURN NEW;
END;$$;


ALTER FUNCTION "public"."check_worker_on_shift"() OWNER TO "postgres";


CREATE OR REPLACE FUNCTION "public"."update_task_completed"() RETURNS "trigger"
    LANGUAGE "plpgsql"
    AS $$
BEGIN
  -- Проверяем, есть ли еще работники, которые не завершили задачу
  IF NOT EXISTS (
    SELECT 1
    FROM tasks_workers
    WHERE id_task = NEW.id_task
    AND is_worker_complited = FALSE
  ) THEN
    -- Если все работники завершили задачу, обновляем статус в tasks
    UPDATE tasks
    SET is_completed = TRUE
    WHERE id = NEW.id_task;
  END IF;
  RETURN NEW;
END;
$$;


ALTER FUNCTION "public"."update_task_completed"() OWNER TO "postgres";


CREATE OR REPLACE FUNCTION "public"."update_weight_product_in_cell"() RETURNS "trigger"
    LANGUAGE "plpgsql"
    AS $$begin
    new.weight_product_in_cell := new.count_product_in_cell * (SELECT weight FROM public."Product" WHERE id = new.id_product);  
    RETURN new; 
end;$$;


ALTER FUNCTION "public"."update_weight_product_in_cell"() OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."task_categories" (
    "id" bigint NOT NULL,
    "name_categories" character varying NOT NULL
);


ALTER TABLE "public"."task_categories" OWNER TO "postgres";


ALTER TABLE "public"."task_categories" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Categories_task_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."cells" (
    "id" integer NOT NULL,
    "id_section" bigint NOT NULL,
    "id_product" integer NOT NULL,
    "name_cell" character varying NOT NULL,
    "max_count_product_in_cell" bigint NOT NULL,
    "count_product_in_cell" bigint NOT NULL,
    "weight_product_in_cell" real NOT NULL,
    "abbreviated_name" character varying NOT NULL
);


ALTER TABLE "public"."cells" OWNER TO "postgres";


ALTER TABLE "public"."cells" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Cell_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."products_categories" (
    "id" bigint NOT NULL,
    "name_category" character varying NOT NULL
);


ALTER TABLE "public"."products_categories" OWNER TO "postgres";


ALTER TABLE "public"."products_categories" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Product_category_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."products" (
    "id" integer NOT NULL,
    "product_name" character varying NOT NULL,
    "article" character varying NOT NULL,
    "weight" double precision NOT NULL,
    "id_product_category" bigint NOT NULL
);


ALTER TABLE "public"."products" OWNER TO "postgres";


ALTER TABLE "public"."products" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Product_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."roles" (
    "id" bigint NOT NULL,
    "name_role" character varying NOT NULL
);


ALTER TABLE "public"."roles" OWNER TO "postgres";


ALTER TABLE "public"."roles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Role_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."sections" (
    "id" bigint NOT NULL,
    "name_section" character varying NOT NULL,
    "id_warehouse" bigint NOT NULL,
    "abbreviated_name" character varying NOT NULL
);


ALTER TABLE "public"."sections" OWNER TO "postgres";


ALTER TABLE "public"."sections" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Section_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."tasks_products" (
    "id" bigint NOT NULL,
    "id_task" bigint NOT NULL,
    "id_product" bigint NOT NULL,
    "id_cell" bigint NOT NULL,
    "count_product" bigint NOT NULL,
    "position_in_optimal_in_path" bigint
);


ALTER TABLE "public"."tasks_products" OWNER TO "postgres";


ALTER TABLE "public"."tasks_products" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Task_Product_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."tasks_workers" (
    "id" bigint NOT NULL,
    "id_worker" "uuid" NOT NULL,
    "id_task" bigint NOT NULL,
    "is_worker_complited" boolean DEFAULT false NOT NULL
);


ALTER TABLE "public"."tasks_workers" OWNER TO "postgres";


ALTER TABLE "public"."tasks_workers" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Task_Worker_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."tasks" (
    "id" bigint NOT NULL,
    "id_category_task" bigint NOT NULL,
    "id_responsible_worker" "uuid" NOT NULL,
    "date_create" "date" NOT NULL,
    "img_optimal_path" "text" NOT NULL,
    "date_execution_task" timestamp with time zone NOT NULL,
    "is_completed" boolean
);


ALTER TABLE "public"."tasks" OWNER TO "postgres";


ALTER TABLE "public"."tasks" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Task_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."workers_work_shifts" (
    "id" bigint NOT NULL,
    "id_worker" "uuid" NOT NULL,
    "id_work_shift" bigint NOT NULL
);


ALTER TABLE "public"."workers_work_shifts" OWNER TO "postgres";


ALTER TABLE "public"."workers_work_shifts" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."User_Work_shift_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."workers" (
    "id" bigint NOT NULL,
    "id_worker" "uuid" NOT NULL,
    "id_role" bigint NOT NULL,
    "first_name" character varying NOT NULL,
    "last_name" character varying NOT NULL,
    "patronymic" character varying NOT NULL,
    "id_warehouse" bigint NOT NULL
);


ALTER TABLE "public"."workers" OWNER TO "postgres";


ALTER TABLE "public"."workers" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."User_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."warehouses" (
    "id" bigint NOT NULL,
    "name_warehouse" character varying NOT NULL,
    "location" character varying NOT NULL
);


ALTER TABLE "public"."warehouses" OWNER TO "postgres";


ALTER TABLE "public"."warehouses" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Warehouse_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."work_shifts" (
    "id" bigint NOT NULL,
    "date_shift" "date" NOT NULL,
    "id_warehouse" bigint NOT NULL,
    "id_main_shift_worker" "uuid" NOT NULL
);


ALTER TABLE "public"."work_shifts" OWNER TO "postgres";


ALTER TABLE "public"."work_shifts" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Work_shift_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."chats" (
    "id" bigint NOT NULL,
    "worker_first" "uuid" NOT NULL,
    "worker_second" "uuid" NOT NULL
);


ALTER TABLE "public"."chats" OWNER TO "postgres";


ALTER TABLE "public"."chats" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."chats_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."messages_in_chat" (
    "id" bigint NOT NULL,
    "id_chat" bigint NOT NULL,
    "id_worker_sender" "uuid" NOT NULL,
    "content_message" "text" NOT NULL
);


ALTER TABLE "public"."messages_in_chat" OWNER TO "postgres";


ALTER TABLE "public"."messages_in_chat" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."messages_in_char_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "public"."task_categories"
    ADD CONSTRAINT "Categories_task_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."cells"
    ADD CONSTRAINT "Cell_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."products_categories"
    ADD CONSTRAINT "Product_category_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."products"
    ADD CONSTRAINT "Product_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."roles"
    ADD CONSTRAINT "Role_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."sections"
    ADD CONSTRAINT "Section_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."tasks_products"
    ADD CONSTRAINT "Task_Product_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."tasks_workers"
    ADD CONSTRAINT "Task_Worker_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."tasks"
    ADD CONSTRAINT "Task_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."workers_work_shifts"
    ADD CONSTRAINT "User_Work_shift_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."workers"
    ADD CONSTRAINT "User_id_user_key" UNIQUE ("id_worker");



ALTER TABLE ONLY "public"."workers"
    ADD CONSTRAINT "User_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."warehouses"
    ADD CONSTRAINT "Warehouse_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."work_shifts"
    ADD CONSTRAINT "Work_shift_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."chats"
    ADD CONSTRAINT "chats_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."messages_in_chat"
    ADD CONSTRAINT "messages_in_char_pkey" PRIMARY KEY ("id");



CREATE OR REPLACE TRIGGER "Check_worker_on_shift_trigger" BEFORE INSERT OR UPDATE ON "public"."workers_work_shifts" FOR EACH ROW EXECUTE FUNCTION "public"."check_worker_on_shift"();



CREATE OR REPLACE TRIGGER "Count_weight" BEFORE INSERT OR UPDATE ON "public"."cells" FOR EACH ROW EXECUTE FUNCTION "public"."update_weight_product_in_cell"();



CREATE OR REPLACE TRIGGER "Update_task_completed_trigger" AFTER UPDATE ON "public"."tasks_workers" FOR EACH ROW WHEN (("new"."is_worker_complited" = true)) EXECUTE FUNCTION "public"."update_task_completed"();



ALTER TABLE ONLY "public"."cells"
    ADD CONSTRAINT "Cell_id_product_fkey" FOREIGN KEY ("id_product") REFERENCES "public"."products"("id");



ALTER TABLE ONLY "public"."cells"
    ADD CONSTRAINT "Cell_id_section_fkey" FOREIGN KEY ("id_section") REFERENCES "public"."sections"("id");



ALTER TABLE ONLY "public"."products"
    ADD CONSTRAINT "Product_id_product_category_fkey" FOREIGN KEY ("id_product_category") REFERENCES "public"."products_categories"("id");



ALTER TABLE ONLY "public"."sections"
    ADD CONSTRAINT "Section_id_warehouse_fkey" FOREIGN KEY ("id_warehouse") REFERENCES "public"."warehouses"("id");



ALTER TABLE ONLY "public"."tasks_products"
    ADD CONSTRAINT "Task_Product_id_cell_fkey" FOREIGN KEY ("id_cell") REFERENCES "public"."cells"("id");



ALTER TABLE ONLY "public"."tasks_products"
    ADD CONSTRAINT "Task_Product_id_product_fkey" FOREIGN KEY ("id_product") REFERENCES "public"."products"("id");



ALTER TABLE ONLY "public"."tasks_products"
    ADD CONSTRAINT "Task_Product_id_task_fkey" FOREIGN KEY ("id_task") REFERENCES "public"."tasks"("id");



ALTER TABLE ONLY "public"."tasks_workers"
    ADD CONSTRAINT "Task_Worker_id_task_fkey" FOREIGN KEY ("id_task") REFERENCES "public"."tasks"("id");



ALTER TABLE ONLY "public"."tasks_workers"
    ADD CONSTRAINT "Task_Worker_id_worker_fkey" FOREIGN KEY ("id_worker") REFERENCES "public"."workers"("id_worker");



ALTER TABLE ONLY "public"."tasks"
    ADD CONSTRAINT "Task_id_category_task_fkey" FOREIGN KEY ("id_category_task") REFERENCES "public"."task_categories"("id");



ALTER TABLE ONLY "public"."tasks"
    ADD CONSTRAINT "Task_id_responsible_worker_fkey" FOREIGN KEY ("id_responsible_worker") REFERENCES "public"."workers"("id_worker");



ALTER TABLE ONLY "public"."workers_work_shifts"
    ADD CONSTRAINT "User_Work_shift_id_work_shift_fkey" FOREIGN KEY ("id_work_shift") REFERENCES "public"."work_shifts"("id");



ALTER TABLE ONLY "public"."workers"
    ADD CONSTRAINT "User_id_user_fkey" FOREIGN KEY ("id_worker") REFERENCES "auth"."users"("id");



ALTER TABLE ONLY "public"."workers_work_shifts"
    ADD CONSTRAINT "Worke_Work_shift_id_worker_fkey" FOREIGN KEY ("id_worker") REFERENCES "public"."workers"("id_worker");



ALTER TABLE ONLY "public"."workers"
    ADD CONSTRAINT "Worker_id_warehouse_fkey" FOREIGN KEY ("id_warehouse") REFERENCES "public"."warehouses"("id");



ALTER TABLE ONLY "public"."chats"
    ADD CONSTRAINT "chats_worker_first_fkey" FOREIGN KEY ("worker_first") REFERENCES "public"."workers"("id_worker");



ALTER TABLE ONLY "public"."chats"
    ADD CONSTRAINT "chats_worker_second_fkey" FOREIGN KEY ("worker_second") REFERENCES "public"."workers"("id_worker");



ALTER TABLE ONLY "public"."messages_in_chat"
    ADD CONSTRAINT "messages_in_char_id_chat_fkey" FOREIGN KEY ("id_chat") REFERENCES "public"."chats"("id");



ALTER TABLE ONLY "public"."messages_in_chat"
    ADD CONSTRAINT "messages_in_char_id_worker_sender_fkey" FOREIGN KEY ("id_worker_sender") REFERENCES "public"."workers"("id_worker");



ALTER TABLE ONLY "public"."workers"
    ADD CONSTRAINT "user_id_role_fkey" FOREIGN KEY ("id_role") REFERENCES "public"."roles"("id");



ALTER TABLE ONLY "public"."work_shifts"
    ADD CONSTRAINT "work_shifts_id_main_shift_worker_fkey" FOREIGN KEY ("id_main_shift_worker") REFERENCES "public"."workers"("id_worker");



ALTER TABLE ONLY "public"."work_shifts"
    ADD CONSTRAINT "work_shifts_id_warehouse_fkey" FOREIGN KEY ("id_warehouse") REFERENCES "public"."warehouses"("id");



ALTER TABLE "public"."cells" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "cells_all" ON "public"."cells" USING (true) WITH CHECK (true);



ALTER TABLE "public"."chats" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "chats_all" ON "public"."chats" USING (true) WITH CHECK (true);



ALTER TABLE "public"."messages_in_chat" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "messages_in_chat_all" ON "public"."messages_in_chat" USING (true) WITH CHECK (true);



ALTER TABLE "public"."products" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "products_all" ON "public"."products" USING (true) WITH CHECK (true);



ALTER TABLE "public"."products_categories" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "products_categories_all" ON "public"."products_categories" USING (true) WITH CHECK (true);



ALTER TABLE "public"."roles" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "roles_all" ON "public"."roles" FOR SELECT USING (true);



ALTER TABLE "public"."sections" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "sections_all" ON "public"."sections" FOR SELECT USING (true);



ALTER TABLE "public"."task_categories" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "task_categories_all" ON "public"."task_categories" USING (true) WITH CHECK (true);



ALTER TABLE "public"."tasks" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "tasks_all" ON "public"."tasks" USING (true) WITH CHECK (true);



ALTER TABLE "public"."tasks_products" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "tasks_products_all" ON "public"."tasks_products" USING (true) WITH CHECK (true);



ALTER TABLE "public"."tasks_workers" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "tasks_workers_true" ON "public"."tasks_workers" FOR SELECT USING (true);



ALTER TABLE "public"."warehouses" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "warehouses_all" ON "public"."warehouses" USING (true) WITH CHECK (true);



ALTER TABLE "public"."work_shifts" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "work_shifts_all" ON "public"."work_shifts" USING (true) WITH CHECK (true);



ALTER TABLE "public"."workers" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "workers_all" ON "public"."workers" USING (true) WITH CHECK (true);



ALTER TABLE "public"."workers_work_shifts" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "workers_work_shifts" ON "public"."workers_work_shifts" USING (true) WITH CHECK (true);





ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."chats";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."messages_in_chat";



GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";




















































































































































































GRANT ALL ON FUNCTION "public"."check_worker_on_shift"() TO "anon";
GRANT ALL ON FUNCTION "public"."check_worker_on_shift"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."check_worker_on_shift"() TO "service_role";



GRANT ALL ON FUNCTION "public"."update_task_completed"() TO "anon";
GRANT ALL ON FUNCTION "public"."update_task_completed"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."update_task_completed"() TO "service_role";



GRANT ALL ON FUNCTION "public"."update_weight_product_in_cell"() TO "anon";
GRANT ALL ON FUNCTION "public"."update_weight_product_in_cell"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."update_weight_product_in_cell"() TO "service_role";


















GRANT ALL ON TABLE "public"."task_categories" TO "anon";
GRANT ALL ON TABLE "public"."task_categories" TO "authenticated";
GRANT ALL ON TABLE "public"."task_categories" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Categories_task_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Categories_task_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Categories_task_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."cells" TO "anon";
GRANT ALL ON TABLE "public"."cells" TO "authenticated";
GRANT ALL ON TABLE "public"."cells" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Cell_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Cell_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Cell_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."products_categories" TO "anon";
GRANT ALL ON TABLE "public"."products_categories" TO "authenticated";
GRANT ALL ON TABLE "public"."products_categories" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Product_category_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Product_category_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Product_category_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."products" TO "anon";
GRANT ALL ON TABLE "public"."products" TO "authenticated";
GRANT ALL ON TABLE "public"."products" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Product_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Product_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Product_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."roles" TO "anon";
GRANT ALL ON TABLE "public"."roles" TO "authenticated";
GRANT ALL ON TABLE "public"."roles" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Role_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Role_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Role_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."sections" TO "anon";
GRANT ALL ON TABLE "public"."sections" TO "authenticated";
GRANT ALL ON TABLE "public"."sections" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Section_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Section_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Section_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."tasks_products" TO "anon";
GRANT ALL ON TABLE "public"."tasks_products" TO "authenticated";
GRANT ALL ON TABLE "public"."tasks_products" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Task_Product_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Task_Product_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Task_Product_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."tasks_workers" TO "anon";
GRANT ALL ON TABLE "public"."tasks_workers" TO "authenticated";
GRANT ALL ON TABLE "public"."tasks_workers" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Task_Worker_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Task_Worker_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Task_Worker_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."tasks" TO "anon";
GRANT ALL ON TABLE "public"."tasks" TO "authenticated";
GRANT ALL ON TABLE "public"."tasks" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Task_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Task_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Task_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."workers_work_shifts" TO "anon";
GRANT ALL ON TABLE "public"."workers_work_shifts" TO "authenticated";
GRANT ALL ON TABLE "public"."workers_work_shifts" TO "service_role";



GRANT ALL ON SEQUENCE "public"."User_Work_shift_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."User_Work_shift_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."User_Work_shift_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."workers" TO "anon";
GRANT ALL ON TABLE "public"."workers" TO "authenticated";
GRANT ALL ON TABLE "public"."workers" TO "service_role";



GRANT ALL ON SEQUENCE "public"."User_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."User_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."User_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."warehouses" TO "anon";
GRANT ALL ON TABLE "public"."warehouses" TO "authenticated";
GRANT ALL ON TABLE "public"."warehouses" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Warehouse_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Warehouse_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Warehouse_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."work_shifts" TO "anon";
GRANT ALL ON TABLE "public"."work_shifts" TO "authenticated";
GRANT ALL ON TABLE "public"."work_shifts" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Work_shift_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Work_shift_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Work_shift_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."chats" TO "anon";
GRANT ALL ON TABLE "public"."chats" TO "authenticated";
GRANT ALL ON TABLE "public"."chats" TO "service_role";



GRANT ALL ON SEQUENCE "public"."chats_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."chats_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."chats_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."messages_in_chat" TO "anon";
GRANT ALL ON TABLE "public"."messages_in_chat" TO "authenticated";
GRANT ALL ON TABLE "public"."messages_in_chat" TO "service_role";



GRANT ALL ON SEQUENCE "public"."messages_in_char_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."messages_in_char_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."messages_in_char_id_seq" TO "service_role";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
